<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="ecommerce.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="1573"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><table title="sqlite_sequence" custom_title="0" dock_id="2" table="4,15:mainsqlite_sequence"/><dock_state state="000000ff00000000fd0000000100000002000005940000032dfc0100000002fb000000160064006f0063006b00420072006f00770073006500310100000000ffffffff0000000000000000fb000000160064006f0063006b00420072006f00770073006500320100000000000005940000010100ffffff000005940000000000000004000000040000000800000008fc00000000"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="Customers" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_" freeze_columns="0"><sort/><column_widths><column index="1" value="89"/><column index="2" value="46"/><column index="3" value="115"/><column index="4" value="59"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="OrderDetails" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_" freeze_columns="0"><sort/><column_widths><column index="1" value="107"/><column index="2" value="64"/><column index="3" value="81"/><column index="4" value="62"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="SQL 1*">-- Customers Table
CREATE TABLE Customers (
    customer_id INTEGER PRIMARY KEY AUTOINCREMENT,
    name TEXT NOT NULL,
    email TEXT UNIQUE,
    country TEXT
);

-- Products Table
CREATE TABLE Products (
    product_id INTEGER PRIMARY KEY AUTOINCREMENT,
    product_name TEXT NOT NULL,
    category TEXT,
    price REAL
);

-- Orders Table
CREATE TABLE Orders (
    order_id INTEGER PRIMARY KEY AUTOINCREMENT,
    customer_id INTEGER,
    order_date TEXT,
    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)
);

-- OrderDetails Table
CREATE TABLE OrderDetails (
    order_detail_id INTEGER PRIMARY KEY AUTOINCREMENT,
    order_id INTEGER,
    product_id INTEGER,
    quantity INTEGER,
    FOREIGN KEY (order_id) REFERENCES Orders(order_id),
    FOREIGN KEY (product_id) REFERENCES Products(product_id)
);
</sql><sql name="SQL 3">SELECT  * FROM Customers;

SELECT* FROM Products ORDER BY price DESC;

SELECT count(*) AS total_orders FROM orders;

SELECT o.order_id,c.name ,o.order_date
FROM Orders o
JOIN Customers c ON o.customer_id=c.customer_id;

SELECT p.product_name ,c.name ,od.quantity 
FROM OrderDetails od
JOIN Orders o ON od.order_id = o.order_id
JOIN Customers c ON o.customer_id = c.customer_id
JOIN Products p ON od.product_id = p.product_id;
</sql><sql name="SQL 3">SELECT c.name, SUM(p.price*od.quantity) AS  total_spent
FROM OrderDetails od
JOIN Orders o ON od.order_id=o.order_id
JOIN Customers c  ON o.customer_id=c.customer_id
JOIN Products  p on od.product_id=p.product_id
GROUP BY c.name 
ORDER BY total_spent DESC;
</sql><sql name="SQL 4">select category,avg(price) as avg_price
from products 
group by category;</sql><sql name="SQL 5">SELECT name
FROM (
    SELECT c.name, SUM(p.price * od.quantity) AS total_spent
    FROM OrderDetails od
    JOIN Orders o ON od.order_id = o.order_id
    JOIN Customers c ON o.customer_id = c.customer_id
    JOIN Products p ON od.product_id = p.product_id
    GROUP BY c.name
) AS spending
WHERE total_spent &gt; (SELECT AVG(price * quantity) FROM OrderDetails od
                     JOIN Products p ON od.product_id = p.product_id);
</sql><sql name="SQL 6">CREATE VIEW OrderSummary AS
SELECT o.order_id, c.name AS customer, o.order_date,
       SUM(p.price * od.quantity) AS order_total
FROM Orders o
JOIN Customers c ON o.customer_id = c.customer_id
JOIN OrderDetails od ON o.order_id = od.order_id
JOIN Products p ON od.product_id = p.product_id
GROUP BY o.order_id;
</sql><sql name="SQL 7">CREATE INDEX idx_orders_customer ON Orders(customer_id);

EXPLAIN QUERY PLAN
SELECT o.order_id, c.name
FROM Orders o
JOIN Customers c ON o.customer_id = c.customer_id;
</sql><sql name="SQL 8*">-- Customers
INSERT INTO Customers (name, email, country) VALUES
('Alice', 'alice@example.com', 'USA'),
('Bob', 'bob@example.com', 'UK'),
('Charlie', 'charlie@example.com', 'India'),
('Diana', 'diana@example.com', 'Canada');

-- Products
INSERT INTO Products (product_name, category, price) VALUES
('Laptop', 'Electronics', 1200),
('Smartphone', 'Electronics', 800),
('Headphones', 'Accessories', 150),
('Book', 'Books', 20);

-- Orders
INSERT INTO Orders (customer_id, order_date) VALUES
(1, '2025-09-01'),
(2, '2025-09-02'),
(1, '2025-09-03'),
(3, '2025-09-05');

-- OrderDetails
INSERT INTO OrderDetails (order_id, product_id, quantity) VALUES
(1, 1, 1),
(1, 3, 2),
(2, 2, 1),
(3, 4, 5),
(4, 2, 2);
</sql><current_tab id="6"/></tab_sql></sqlb_project>
